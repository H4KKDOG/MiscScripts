repeat
    task.wait()
until game:IsLoaded()

if getgenv().Shiro then return end
getgenv().Shiro = true

local MacLib = loadstring(game:HttpGet("https://github.com/biggaboy212/Maclib/releases/latest/download/maclib.txt"))()
local Window = MacLib:Window({
    Title = "Fisch GUI",
    Subtitle = "Shiro | v0.2",
    Size = UDim2.fromOffset(750, 500),
    DragStyle = 1,
    DisabledWindowControls = {"Exit", "Minimize"},
    ShowUserInfo = true,
    Keybind = Enum.KeyCode.LeftControl,
    AcrylicBlur = true,
})

local Players = game:GetService('Players')
local CoreGui = game:GetService('StarterGui')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local ContextActionService = game:GetService('ContextActionService')
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService('VirtualInputManager')
local TeleportService = game:GetService("TeleportService")

local LocalPlayer = Players.LocalPlayer
local playerName = LocalPlayer.Name
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

local Progress = false
local Finished = false
local rodName

getgenv().config = getgenv().config
local isFirstTime = false
local configTemplate = {
    Enabled = false,
    AutoSell = false,
    SellBind = "R"
}

if not isfolder("FischConfig") then
    isFirstTime = true
    makefolder("FischConfig")
end

if not isfile("FischConfig/Cooked.txt") then
    isFirstTime = true
    writefile("FischConfig/Cooked.txt", "")
end

if isFirstTime then
    local encodedConfig = HttpService:JSONEncode(configTemplate)
    writefile("FischConfig/Cooked.txt", encodedConfig)
end

local function loadConfig()
    local decodedConfig = HttpService:JSONDecode(readfile("FischConfig/Cooked.txt"))
    getgenv().config = decodedConfig
end

local function updateConfig()
    local encodedConfig = HttpService:JSONEncode(getgenv().config)
    writefile("FischConfig/Cooked.txt", encodedConfig)
end

loadConfig()

function replaceAFKEvent()
    local AFK = ReplicatedStorage:FindFirstChild("events"):FindFirstChild("afk")
    if AFK then
        task.wait(0.75)
        local FakeAFK = Instance.new("RemoteEvent")
        FakeAFK.Name = "afk"
        FakeAFK.Parent = ReplicatedStorage:FindFirstChild("events")

        Window:Notify({ Title = "Fisch Notification", Description = "AntiAFK", Lifetime = 5 })
        AFK:Destroy()
    end
end

function updateRodInWorkspace()
    local playerWorkspace = workspace:FindFirstChild(playerName)
    if playerWorkspace then
        for _, item in pairs(playerWorkspace:GetChildren()) do
            if item:IsA('Tool') and item.Name:lower():find('rod') then
                rodName = item.Name
                return item
            end
        end
    end
    return nil
end

--// Reel / Shake
LocalPlayer.PlayerGui.DescendantAdded:Connect(function(Descendant)
    if Descendant.Name == 'button' and Descendant.Parent.Name == 'safezone' then
        task.wait()
        local ButtonPosition, ButtonSize = Descendant.AbsolutePosition, Descendant.AbsoluteSize

        local radius = ButtonSize.X / 2

        local ClickPositionX = ButtonPosition.X + ButtonSize.X - radius * 0.55
        local ClickPositionY = ButtonPosition.Y + ButtonSize.Y - radius * 0.55

        if ClickPositionX ~= 29 and ClickPositionY ~= 29 then
            task.wait(0.75)
            VirtualInputManager:SendMouseButtonEvent(ClickPositionX, ClickPositionY, Enum.UserInputType.MouseButton1.Value, true, game, 1)
            VirtualInputManager:SendMouseButtonEvent(ClickPositionX, ClickPositionY, Enum.UserInputType.MouseButton1.Value, false, game, 1)
        end
    elseif Descendant.Name == 'playerbar' and Descendant.Parent.Name == 'bar' then
        Finished = true

        local randomChance = math.random(1, 3)
        local Perfect = randomChance <= 1

        if Finished then
            task.wait(5.0)
            ReplicatedStorage.events.reelfinished:FireServer(100, Perfect)
        end
    end
end)


LocalPlayer.Character.ChildAdded:Connect(function(Child)
    if Child:IsA('Tool') and Child.Name:lower():find('rod') then
        rodName = Child.Name
        Rod = Child
    end
end)

LocalPlayer.Character.ChildRemoved:Connect(function(Child)
    if Child.Name == rodName then
        rodName = nil
    end
end)

LocalPlayer.PlayerGui.DescendantRemoving:Connect(function(Descendant)
    if Descendant.Name == 'reel' then
        Finished = false
        if config.AutoSell then
            ReplicatedStorage.events.selleverything:InvokeServer()
        end
        Progress = false
    end
end)

--// Cast
spawn(function()
    while task.wait() do
        if config.Enabled and not Progress then
            local nRod = updateRodInWorkspace()
            if nRod and not nRod:FindFirstChild("bobber") then
                Progress = true
                task.wait(2.5)

                VirtualInputManager:SendMouseButtonEvent(0, 0, Enum.UserInputType.MouseButton1.Value, true, game, 1)
                task.wait(0.25)
                VirtualInputManager:SendMouseButtonEvent(0, 0, Enum.UserInputType.MouseButton1.Value, false, game, 1)

                wait(0.01)
                if Character:FindFirstChild(rodName) and nRod:FindFirstChild("events") then
                    Character:FindFirstChild(rodName).events.reset:FireServer()
                    Character:FindFirstChild(rodName).events.cast:FireServer(100.5)
                end

                local bobberCheckDuration = 4.9
                local checkInterval = 5.0
                local timeElapsed = 0

                while timeElapsed < bobberCheckDuration do
                    task.wait(checkInterval)
                    if nRod:FindFirstChild("bobber") then
                        break
                    else
                        Progress = false
                    end
                    timeElapsed = timeElapsed + checkInterval
                end

                if not nRod:FindFirstChild("bobber") then
                    Progress = false
                end
            else
                Progress = false
            end
        end
    end
end)

--// Bobber Check
spawn(function()
    while task.wait() do
        task.wait(30)

        local playerWorkspace = workspace:FindFirstChild(playerName)
        if playerWorkspace and playerWorkspace:FindFirstChild(rodName) then
            local nRod = playerWorkspace[rodName]

            if not nRod:FindFirstChild("bobber") then
                Progress = false
            end
        end
    end
end)

--// GUI
local TabGroup = Window:TabGroup()
local Teleport = TabGroup:Tab({ Name = "Teleport" })
local Misc = TabGroup:Tab({ Name = "Misc" })

local TPLeft = Teleport:Section({ Side = "Left" })
local TPRight = Teleport:Section({ Side = "Right" })

local MiscLeft = Misc:Section({ Side = "Left" })
local MiscRight = Misc:Section({ Side = "Right" })

TPLeft:Header({ Name = "Island" })
TPRight:Header({ Name = "Spot" })

MiscLeft:Header({ Name = "Settings" })
MiscRight:Header({ Name = "Debugging" })

--// MiscRight
MiscRight:Button({ Name = "Get Current Pos",
    Callback = function()
        local position = HumanoidRootPart.Position
        local clipboardContent = "{ \"LocationName\", Vector3.new(" .. position.X .. ", " .. position.Y .. ", " .. position.Z .. ") },"
        setclipboard(clipboardContent)
    end,
})

MiscRight:Button({ Name = "Rejoin Server",
    Callback = function()
        TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, player)
    end,
})

MiscRight:Button({ Name = "Server Hop",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/H4KKDOG/MiscScripts/refs/heads/main/ServerHop"))()
    end,
})

--// MiscLeft
MiscLeft:Keybind({
    Name = "Sell Inventory",
    Default = Enum.KeyCode[config.SellBind],
    Callback = function(value)
        ReplicatedStorage.events.selleverything:InvokeServer()
        Window:Notify({ Title = "Fisch Notification", Description = "Sell Inventory!", Lifetime = 5 })
        config.SellBind = tostring(value.Name)
        updateConfig()
    end,
    onBinded = function(value)
        config.SellBind = tostring(value.Name)
        updateConfig()
        Window:Notify({ Title = "Fisch Notification", Description = "Set Bind : "..tostring(value.Name), Lifetime = 5 })
    end,
}, "SellB")

local AutoCToggle = MiscLeft:Toggle({
    Name = "Auto Cast",
    Default = config.Enabled,
    Callback = function(value)
        config.Enabled = value
        updateConfig()
    end,
}, "ACast")

local SellToggle = MiscLeft:Toggle({
    Name = "Auto Sell",
    Default = config.AutoSell,
    Callback = function(value)
        config.AutoSell = value
        updateConfig()
    end,
}, "ASell")

--// TPLeft
local locations = {
    { "Moosewood", Vector3.new(383.060546875, 134.50001525878906, 267.64471435546875) },
    { "Roslit Hamlet", Vector3.new(-1442.3291015625, 133, 726.9091796875) },
    { "Terrapin Island", Vector3.new(-192.4793243408203, 135.2742919921875, 1953.1597900390625) },
    { "Statue Of Sovereignty", Vector3.new(31.58206558227539, 144.49334716796875, -1021.61083984375) },
    { "Sunstone", Vector3.new(-917.5526733398438, 135.08364868164062, -1122.1175537109375) },
    { "Snowcap Island", Vector3.new(2620.824951171875, 139.7838592529297, 2423.62890625) },
    { "The Arc", Vector3.new(998.9711303710938, 131.3202362060547, -1237.1431884765625) },
    { "Keepers Altar", Vector3.new(1296.32080078125, -805.292236328125, -298.93817138671875) },
    { "Harvester Spike", Vector3.new(-1254.696044921875, 137.56063842773438, 1554.47119140625) },
    { "Mushgrove Swamp", Vector3.new(2441.1611328125, 130.904052734375, -683.6802368164062) },
    { "Vertigo", Vector3.new(-95.83425903320312, -513.2993774414062, 1116.5545654296875) }
}

for _, location in ipairs(locations) do
    TPLeft:Button({ Name = location[1],
        Callback = function()
            HumanoidRootPart.CFrame = CFrame.new(location[2])
        end,
    })
end

--// TPRight
local fishingSpots = {
    { "Sunstone (Common Crate)", Vector3.new(-1149.08508, 134.49998, -1055.80151) },
    { "Vertigo (Small Stone)", Vector3.new(-107.99476623535156, -731.946533203125, 1207.8134765625) },
    { "Moosewood (Small Island)", Vector3.new(229.60299682617188, 139.34976196289062, 43.50540542602539) },
    { "Snowcap (Cave)", Vector3.new(2805.062744140625, 131.85032653808594, 2712.624267578125) }
}

for _, location in ipairs(fishingSpots) do
    TPRight:Button({ Name = location[1],
        Callback = function()
            HumanoidRootPart.CFrame = CFrame.new(location[2])
        end,
    })
end

if UserInputService.KeyboardEnabled and not UserInputService.TouchEnabled then

    local WindowAFK
    WindowAFK = UserInputService.WindowFocused:Connect(function()
        replaceAFKEvent()
        WindowAFK:Disconnect()
    end)

    Window:SetState(false)
    Window:Notify({ Title = "Fisch Notification", Description = "Loaded!", Lifetime = 5 })
elseif UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled then

    replaceAFKEvent()
    Window:Notify({ Title = "Fisch Notification", Description = "Loaded!", Lifetime = 5 })
end

Teleport:Select()
